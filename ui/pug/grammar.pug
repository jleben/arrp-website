pre#grammar.
  
  #[a(name='module' class='symbol') module] = #[a(href='#module-decl' class='symbol') module-decl]? #[a(href='#imports' class='symbol') imports] #[a(href='#declarations' class='symbol') declarations]
  
  #[a(name='module-decl' class='symbol') module-decl] = "<span class='literal'>module</span>" #[a(href='#id' class='symbol') id] "<span class='literal'>;</span>"
  
  #[a(name='imports' class='symbol') imports] = #[a(href='#import-decl' class='symbol') import-decl]*
  
  #[a(name='import-decl' class='symbol') import-decl] = "<span class='literal'>import</span>" #[a(href='#id' class='symbol') id] ( "<span class='literal'>as</span>" #[a(href='#id' class='symbol') id] )? "<span class='literal'>;</span>"
  
  #[a(name='declarations' class='symbol') declarations] = ( #[a(href='#declaration' class='symbol') declaration] ( "<span class='literal'>;</span>" #[a(href='#declaration' class='symbol') declaration] )* )? "<span class='literal'>;</span>"?
  
  #[a(name='declaration' class='symbol') declaration] = #[a(href='#input-decl' class='symbol') input-decl] | #[a(href='#external-decl' class='symbol') external-decl] | #[a(href='#local-decl' class='symbol') local-decl]
  
  #[a(name='input-decl' class='symbol') input-decl] = "<span class='literal'>input</span>" #[a(href='#type-decl' class='symbol') type-decl]
  
  #[a(name='output-decl' class='symbol') output-decl] = "<span class='literal'>output</span>" (#[a(href='#id' class='symbol') id] | #[a(href='#type-decl' class='symbol') type-decl] | #[a(href='#value-decl' class='symbol') value-decl])
  
  #[a(name='external-decl' class='symbol') external-decl] = "<span class='literal'>external</span>" #[a(href='#type-decl' class='symbol') type-decl]
  
  #[a(name='local-decl' class='symbol') local-decl] = #[a(href='#type-decl' class='symbol') type-decl] | #[a(href='#value-decl' class='symbol') value-decl] | #[a(href='#elem-value-decl' class='symbol') elem-value-decl] | #[a(href='#func-decl' class='symbol') func-decl]
  
  #[a(name='local-decls' class='symbol') local-decls] = #[a(href='#local-decl' class='symbol') local-decl] ( "<span class='literal'>;</span>" #[a(href='#declaration' class='symbol') declaration] )*
  
  #[a(name='type-decl' class='symbol') type-decl] = #[a(href='#id' class='symbol') id] "<span class='literal'>:</span>" #[a(href='#type' class='symbol') type]
  
  #[a(name='func-decl' class='symbol') func-decl] = #[a(href='#id' class='symbol') id] "<span class='literal'>(</span>" #[a(href='#param-list' class='symbol') param-list] "<span class='literal'>)</span>" "<span class='literal'>=</span>" #[a(href='#expr' class='symbol') expr]
  
  #[a(name='value-decl' class='symbol') value-decl] = #[a(href='#id' class='symbol') id] "<span class='literal'>=</span>" #[a(href='#expr' class='symbol') expr]
  
  #[a(name='elem-value-decl' class='symbol') elem-value-decl] = #[a(href='#id' class='symbol') id] "<span class='literal'>[</span>" #[a(href='#index-pattern' class='symbol') index-pattern] "<span class='literal'>]</span>"  "<span class='literal'>=</span>" #[a(href='#expr' class='symbol') expr] #[a(href='#index-guard' class='symbol') index-guard]?
  
  #[a(name='param-list' class='symbol') param-list] = #[a(href='#id' class='symbol') id] ( "<span class='literal'>,</span>" #[a(href='#id' class='symbol') id] )*
  
  #[a(name='type' class='symbol') type] = #[a(href='#data-type' class='symbol') data-type] | #[a(href='#function-type' class='symbol') function-type]
  
  #[a(name='data-type' class='symbol') data-type] = #[a(href='#array-type' class='symbol') array-type] | #[a(href='#primitive-type' class='symbol') primitive-type]
  
  #[a(name='array-type' class='symbol') array-type] = "<span class='literal'>[</span>" #[a(href='#expr-list' class='symbol') expr-list] "<span class='literal'>]</span>" #[a(href='#primitive-type' class='symbol') primitive-type]
  
  #[a(name='primitive-type' class='symbol') primitive-type] = #[a(href='#id' class='symbol') id]
  
  #[a(name='function-type' class='symbol') function-type] = #[a(href='#data-type' class='symbol') data-type] ( "<span class='literal'>,</span>" #[a(href='#data-type' class='symbol') data-type] ) "<span class='literal'>-></span>" #[a(href='#data-type' class='symbol') data-type]
  
  #[a(name='expr' class='symbol') expr] =
      #[a(href='#id' class='symbol') id]
      |
      #[a(href='#qualified-id' class='symbol') qualified-id]
      |
      #[a(href='#literal' class='symbol') literal]
      |
      #[a(href='#infinity' class='symbol') infinity]
      |
      #[a(href='#unary-op' class='symbol') unary-op] #[a(href='#expr' class='symbol') expr]
      |
      #[a(href='#expr' class='symbol') expr] #[a(href='#binary-op' class='symbol') binary-op] #[a(href='#expr' class='symbol') expr]
      |
      #[a(href='#conditional' class='symbol') conditional]
      |
      #[a(href='#lambda' class='symbol') lambda]
      |
      #[a(href='#func-application' class='symbol') func-application]
      |
      #[a(href='#func-composition' class='symbol') func-composition]
      |
      #[a(href='#array-func' class='symbol') array-func]
      |
      #[a(href='#array-enum' class='symbol') array-enum]
      |
      #[a(href='#array-concat' class='symbol') array-concat]
      |
      #[a(href='#array-application' class='symbol') array-application]
      |
      #[a(href='#array-size' class='symbol') array-size]
      |
      "<span class='literal'>(</span>" #[a(href='#expr' class='symbol') expr] "<span class='literal'>)</span>"
      |
      #[a(href='#let-expr' class='symbol') let-expr]
      |
      #[a(href='#where-expr' class='symbol') where-expr]
      |
      #[a(href='#id' class='symbol') id] "<span class='literal'>=</span>" #[a(href='#expr' class='symbol') expr]
  
  #[a(name='unary-op' class='symbol') unary-op] = "<span class='literal'>!</span>" | "<span class='literal'>-</span>"
  
  #[a(name='binary-op' class='symbol') binary-op] =
      "<span class='literal'>||</span>" | "<span class='literal'>&&</span>" | "<span class='literal'>==</span>" | "<span class='literal'>!=</span>" | "<span class='literal'><</span>" | "<span class='literal'><=</span>" | "<span class='literal'>></span>" | "<span class='literal'>>=</span>" |
      "<span class='literal'>+</span>" | "<span class='literal'>-</span>" | "<span class='literal'>*</span>" | "<span class='literal'>/</span>" | "<span class='literal'>//</span>" | "<span class='literal'>%</span>" | "<span class='literal'>^</span>"
  
  #[a(name='conditional' class='symbol') conditional] = "<span class='literal'>if</span>" #[a(href='#expr' class='symbol') expr] "<span class='literal'>then</span>" #[a(href='#expr' class='symbol') expr] "<span class='literal'>else</span>" #[a(href='#expr' class='symbol') expr]
  
  #[a(name='lambda' class='symbol') lambda] =
      "<span class='literal'>\</span>" #[a(href='#param-list' class='symbol') param-list] "<span class='literal'>-></span>" #[a(href='#expr' class='symbol') expr]
  
  #[a(name='func-application' class='symbol') func-application] = #[a(href='#expr' class='symbol') expr] "<span class='literal'>(</span>" #[a(href='#expr-list' class='symbol') expr-list] "<span class='literal'>)</span>"
  
  #[a(name='func-composition' class='symbol') func-composition] = #[a(href='#expr' class='symbol') expr] "<span class='literal'>.</span>" #[a(href='#expr' class='symbol') expr]
  
  #[a(name='array-func' class='symbol') array-func] = "<span class='literal'>[</span>" ( #[a(href='#array-bounds' class='symbol') array-bounds] "<span class='literal'>:</span>" )? #[a(href='#index-mappings' class='symbol') index-mappings] "<span class='literal'>]</span>"
  
  #[a(name='array-bounds' class='symbol') array-bounds] = #[a(href='#expr-list' class='symbol') expr-list]
  
  #[a(name='index-mappings' class='symbol') index-mappings] = #[a(href='#index-mapping' class='symbol') index-mapping] ( "<span class='literal'>;</span>" #[a(href='#index-mapping' class='symbol') index-mapping] )*  "<span class='literal'>;</span>"?
  
  #[a(name='index-mapping' class='symbol') index-mapping] =
      #[a(href='#index-pattern' class='symbol') index-pattern] "<span class='literal'>-></span>" #[a(href='#expr' class='symbol') expr]
      |
      #[a(href='#index-pattern' class='symbol') index-pattern] ( "<span class='literal'>|</span>" #[a(href='#index-guard' class='symbol') index-guard] "<span class='literal'>-></span>" #[a(href='#expr' class='symbol') expr] )* "<span class='literal'>|</span>" #[a(href='#expr' class='symbol') expr]
  
  #[a(name='index-pattern' class='symbol') index-pattern] = #[a(href='#index-pattern-elem' class='symbol') index-pattern-elem] ( "<span class='literal'>,</span>" #[a(href='#index-pattern-elem' class='symbol') index-pattern-elem] )*
  
  #[a(name='index-pattern-elem' class='symbol') index-pattern-elem] = #[a(href='#id' class='symbol') id] | #[a(href='#int' class='symbol') int]
  
  #[a(name='index-guard' class='symbol') index-guard] = #[a(href='#expr' class='symbol') expr]
  
  #[a(name='array-enum' class='symbol') array-enum] = "<span class='literal'>[</span>" #[a(href='#array-enum-elem' class='symbol') array-enum-elem] ( "<span class='literal'>;</span>" #[a(href='#array-enum-elem' class='symbol') array-enum-elem] )*  "<span class='literal'>]</span>"
  
  #[a(name='array-enum-elem' class='symbol') array-enum-elem] = #[a(href='#expr' class='symbol') expr]
  
  #[a(name='array-concat' class='symbol') array-concat] = #[a(href='#expr' class='symbol') expr] "<span class='literal'>++</span>" #[a(href='#expr' class='symbol') expr]
  
  #[a(name='array-application' class='symbol') array-application] = #[a(href='#array-app-object' class='symbol') array-app-object] "<span class='literal'>[</span>" #[a(href='#expr-list' class='symbol') expr-list] "<span class='literal'>]</span>"
  
  #[a(name='array-app-object' class='symbol') array-app-object] = #[a(href='#expr' class='symbol') expr] | "<span class='literal'>this</span>"
  
  #[a(name='array-size' class='symbol') array-size] = "<span class='literal'>#</span>" #[a(href='#array-size-object' class='symbol') array-size-object] ( "<span class='literal'>@</span>" #[a(href='#array-size-dim' class='symbol') array-size-dim] )?
  
  #[a(name='array-size-object' class='symbol') array-size-object] = #[a(href='#expr' class='symbol') expr]
  
  #[a(name='array-size-dim' class='symbol') array-size-dim] = #[a(href='#expr' class='symbol') expr]
  
  #[a(name='let-expr' class='symbol') let-expr] =
      "<span class='literal'>let</span>" #[a(href='#local-decl' class='symbol') local-decl] "<span class='literal'>in</span>" #[a(href='#expr' class='symbol') expr]
      |
      "<span class='literal'>let</span>" "<span class='literal'>{</span>" #[a(href='#local-decls' class='symbol') local-decls] "<span class='literal'>}</span>" "<span class='literal'>in</span>" #[a(href='#expr' class='symbol') expr]
  
  #[a(name='where-expr' class='symbol') where-expr] =
      #[a(href='#expr' class='symbol') expr] "<span class='literal'>where</span>" #[a(href='#local-decl' class='symbol') local-decl]
      |
      #[a(href='#expr' class='symbol') expr] "<span class='literal'>where</span>" "<span class='literal'>{</span>" #[a(href='#local-decls' class='symbol') local-decls] "<span class='literal'>}</span>"
  
  #[a(name='expr-list' class='symbol') expr-list] = #[a(href='#expr' class='symbol') expr] ( "<span class='literal'>,</span>" #[a(href='#expr' class='symbol') expr] )*
  
  #[a(name='id' class='symbol') id] = [<span class='literal'>a-zA-Z</span>] [<span class='literal'>a-zA-Z0-9_</span>]*
  
  #[a(name='qualified-id' class='symbol') qualified-id] = #[a(href='#id' class='symbol') id] "<span class='literal'>.</span>" #[a(href='#id' class='symbol') id]
  
  #[a(name='literal' class='symbol') literal] = #[a(href='#int' class='symbol') int] | #[a(href='#real' class='symbol') real] | #[a(href='#complex' class='symbol') complex] | #[a(href='#boolean' class='symbol') boolean]
  
  #[a(name='infinity' class='symbol') infinity] = "<span class='literal'>~</span>"
  
  #[a(name='int' class='symbol') int] = [<span class='literal'>0-9</span>]+
  
  #[a(name='real' class='symbol') real] = [<span class='literal'>0-9</span>]+ "<span class='literal'>.</span>" [<span class='literal'>0-9</span>]+
  
  #[a(name='complex' class='symbol') complex] = [<span class='literal'>0-9</span>]+ ( "<span class='literal'>.</span>" [<span class='literal'>0-9</span>]+ )? "<span class='literal'>i</span>"
  
  #[a(name='boolean' class='symbol') boolean] = "<span class='literal'>true</span>" | "<span class='literal'>false</span>"
